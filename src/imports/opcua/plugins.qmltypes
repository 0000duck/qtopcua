import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump QtOpcUa 5.12'

Module {
    dependencies: ["QtQuick 2.8"]
    Component {
        name: "Constants"
        exports: ["Constants 5.12"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "LocalizedText"
        exports: ["LocalizedText 5.12"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "locale"; type: "string" }
        Property { name: "text"; type: "string" }
    }
    Component {
        name: "OpcUaConnection"
        prototype: "QObject"
        exports: ["Connection 5.12"]
        exportMetaObjectRevisions: [0]
        Property { name: "availableBackends"; type: "QStringList"; isReadonly: true }
        Property { name: "connected"; type: "bool"; isReadonly: true }
        Property { name: "backend"; type: "string" }
        Property { name: "defaultConnection"; type: "bool" }
        Property { name: "namespaces"; type: "QStringList"; isReadonly: true }
        Method {
            name: "connectToEndpoint"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method { name: "disconnectFromEndpoint" }
        Method {
            name: "setDefaultConnection"
            Parameter { name: "defaultConnection"; type: "bool" }
        }
        Method { name: "setDefaultConnection" }
    }
    Component {
        name: "OpcUaMethodNode"
        prototype: "OpcUaNode"
        exports: ["MethodNode 5.12"]
        exportMetaObjectRevisions: [0]
        Property { name: "objectNodeId"; type: "OpcUaNodeIdType"; isPointer: true }
        Signal {
            name: "objectNodeIdChanged"
            Parameter { name: "nodeId"; type: "const OpcUaNodeIdType"; isPointer: true }
        }
        Method {
            name: "setObjectNodeId"
            Parameter { name: "nodeId"; type: "OpcUaNodeIdType"; isPointer: true }
        }
        Method { name: "callMethod" }
    }
    Component {
        name: "OpcUaNode"
        prototype: "QObject"
        exports: ["Node 5.12"]
        exportMetaObjectRevisions: [0]
        Property { name: "nodeId"; type: "OpcUaNodeIdType"; isPointer: true }
        Property { name: "connection"; type: "OpcUaConnection"; isPointer: true }
        Property { name: "readyToUse"; type: "bool"; isReadonly: true }
        Signal {
            name: "nodeIdChanged"
            Parameter { name: "nodeId"; type: "const OpcUaNodeIdType"; isPointer: true }
        }
        Signal {
            name: "connectionChanged"
            Parameter { type: "OpcUaConnection"; isPointer: true }
        }
        Signal { name: "nodeChanged" }
        Method {
            name: "setNodeId"
            Parameter { name: "nodeId"; type: "OpcUaNodeIdType"; isPointer: true }
        }
        Method {
            name: "setConnection"
            Parameter { type: "OpcUaConnection"; isPointer: true }
        }
    }
    Component {
        name: "OpcUaNodeId"
        prototype: "OpcUaNodeIdType"
        exports: ["NodeId 5.12"]
        exportMetaObjectRevisions: [0]
        Property { name: "ns"; type: "string" }
        Property { name: "identifier"; type: "string" }
        Signal {
            name: "nodeNamespaceChanged"
            Parameter { type: "string" }
        }
        Signal {
            name: "identifierChanged"
            Parameter { type: "string" }
        }
        Signal { name: "nodeChanged" }
    }
    Component {
        name: "OpcUaNodeIdType"
        prototype: "QObject"
        exports: ["NodeIdType 5.12"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Signal {
            name: "nodeNamespaceChanged"
            Parameter { type: "string" }
        }
        Signal {
            name: "identifierChanged"
            Parameter { type: "string" }
        }
        Signal { name: "nodeChanged" }
    }
    Component {
        name: "OpcUaRelativeNodeId"
        prototype: "OpcUaNodeIdType"
        exports: ["RelativeNodeId 5.12"]
        exportMetaObjectRevisions: [0]
        Property { name: "startNode"; type: "OpcUaNodeIdType"; isPointer: true }
        Property { name: "path"; type: "OpcUaRelativeNodePath"; isList: true; isReadonly: true }
        Signal {
            name: "startNodeChanged"
            Parameter { name: "startNode"; type: "OpcUaNodeIdType"; isPointer: true }
        }
        Method {
            name: "setStartNode"
            Parameter { name: "startNode"; type: "OpcUaNodeIdType"; isPointer: true }
        }
    }
    Component {
        name: "OpcUaRelativeNodePath"
        prototype: "QObject"
        exports: ["RelativeNodePath 5.12"]
        exportMetaObjectRevisions: [0]
        Property { name: "ns"; type: "string" }
        Property { name: "browseName"; type: "string" }
        Property { name: "referenceType"; type: "QOpcUa::ReferenceTypeId" }
        Property { name: "includeSubtypes"; type: "bool" }
        Property { name: "isInverse"; type: "bool" }
        Signal {
            name: "nodeNamespaceChanged"
            Parameter { name: "ns"; type: "string" }
        }
        Signal {
            name: "browseNameChanged"
            Parameter { name: "browseName"; type: "string" }
        }
        Signal {
            name: "referenceTypeChanged"
            Parameter { name: "referenceType"; type: "QOpcUa::ReferenceTypeId" }
        }
        Signal {
            name: "includeSubtypesChanged"
            Parameter { name: "includeSubtypes"; type: "bool" }
        }
        Signal {
            name: "isInverseChanged"
            Parameter { name: "isInverse"; type: "bool" }
        }
        Method {
            name: "setNodeNamespace"
            Parameter { name: "ns"; type: "string" }
        }
        Method {
            name: "setBrowseName"
            Parameter { name: "browseName"; type: "string" }
        }
        Method {
            name: "setReferenceType"
            Parameter { name: "referenceType"; type: "QOpcUa::ReferenceTypeId" }
        }
        Method {
            name: "setIncludeSubtypes"
            Parameter { name: "includeSubtypes"; type: "bool" }
        }
        Method {
            name: "setIsInverse"
            Parameter { name: "isInverse"; type: "bool" }
        }
    }
    Component {
        name: "OpcUaValueNode"
        prototype: "OpcUaNode"
        exports: ["ValueNode 5.12"]
        exportMetaObjectRevisions: [0]
        Property { name: "value"; type: "QVariant" }
        Signal {
            name: "valueChanged"
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "setValue"
            Parameter { type: "QVariant" }
        }
    }
}
