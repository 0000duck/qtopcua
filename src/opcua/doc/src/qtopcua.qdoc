/****************************************************************************
**
** Copyright (C) 2015 basysKom GmbH, info@basyskom.com
** Contact: https://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \module QtOpcUa
    \title Qt OPC UA C++ Classes
    \ingroup modules
    \qtvariable opcua
    \since 5.11
    \brief List of C++ classes that provide the Qt OPC UA functionality.

    To link against the module, add this line to your \l qmake \c .pro file:

    \code
    QT += opcua
    \endcode
*/

/*!
    \page qtopcua-index.html
    \since 5.7
    \title Qt OPC UA
    \brief Implements OPC UA connectivity through a Qt API.

    The Qt \l{Qt OPC UA#A short introduction to OPC UA}{OPC UA} module
    implements a Qt API to interact with OPC UA on top of a 3rd party
    OPC UA stack.

    The stacks are connected via plugins and can be selected/switched at runtime.
    Currently, the LGPL v3 implementation FreeOPCUA and the MPLv2 implementation Open62541 are supported.

    \section1 Getting started

    Add the following line to your .pro file
    \code
        QT += opcua
    \endcode
    and include the Qt OPC UA headers into your files using
    \code
       #include <QtOpcUa>
    \endcode

    The \l{Qt OPC UA Examples}{examples} demonstrate how to use Qt OPC UA API to interact with an OPC UA server.

    \section1 A short introduction to OPC UA
    OPC UA is a protocol for data modelling and secure exchange of data in
    industrial applications.
    The protocol offers built-in transport security based on certificates and
    established cryptographic algorithms.
    The data modelling system is object oriented and offers support for
    pre-made models which can be extended to fit special needs.

    \section1 Implemented features from the OPC UA protocol

    Following features of OPC UA are supported by Qt OPC UA:

    \table
    \header
    \li Feature
    \li Open62541 plugin
    \li FreeOPCUA plugin
    \row
    \li Read
    \li X
    \li X
    \row
    \li Write
    \li X
    \li X
    \row
    \li Browse
    \li X
    \li X
    \row
    \li Data change subscriptions
    \li X
    \li X
    \row
    \li Modify subscriptions / monitored Items
    \li X
    \li
    \row
    \li Method calls
    \li X
    \li X
    \endtable

    \section1 Data types
    A subset of the OPC UA data types is currently supported in Qt OPC UA.
    Most of them are available with both backends.

    \table
    \header
    \li Data type
    \li Open62541 plugin
    \li FreeOPCUA plugin
    \li Qt OPC UA data type
    \row
    \li Int16 / Int32 / Int64
    \li X
    \li X
    \li Directly used
    \row
    \li UInt16, UInt32, UInt64
    \li X
    \li X
    \li Directly used
    \row
    \li Byte
    \li X
    \li X
    \li quint8
    \row
    \li SByte
    \li X
    \li X
    \li qint8
    \row
    \li Boolean
    \li X
    \li X
    \li Directly used
    \row
    \li Double
    \li X
    \li X
    \li Directly used
    \row
    \li Float
    \li X
    \li X
    \li Directly used
    \row
    \li String
    \li X
    \li X
    \li QString
    \row
    \li LocalizedText
    \li X
    \li X
    \li \l QOpcUa::QLocalizedText
    \row
    \li DateTime
    \li X
    \li X
    \li QDateTime
    \row
    \li ByteString
    \li X
    \li X
    \li QByteArray
    \row
    \li XmlElement
    \li X
    \li
    \li QString
    \row
    \li NodeId
    \li X
    \li X
    \li QString
    \row
    \li GUID
    \li X
    \li X
    \li QUuid
    \row
    \li QualifiedName
    \li X
    \li X
    \li \l QOpcUa::QQualifiedName
    \row
    \li StatusCode
    \li X
    \li X
    \li \l QOpcUa::UaStatusCode
    \row
    \li Range
    \li X
    \li
    \li \l QOpcUa::QRange
    \row
    \li EUInformation
    \li X
    \li
    \li \l QOpcUa::QEUInformation
    \row
    \li ComplexNumer
    \li X
    \li
    \li \l QOpcUa::QComplexNumber
    \row
    \li DoubleComplexNumber
    \li X
    \li
    \li \l QOpcUa::QDoubleComplexNumber
    \row
    \li AxisInformation
    \li X
    \li
    \li \l QOpcUa::QAxisInformation
    \row
    \li XV
    \li X
    \li
    \li \l QOpcUa::QXValue
    \endtable

    \section1 Classes and ownership
    Two important classes are exposed to the user: QOpcUaClient and QOpcUaNode.

    Objects of both classes are owned by the user and must be deleted when they are no longer needed.

    \section1 Logging categories
    The following logging categories are used by Qt OPC UA
    \table
    \header
    \li Logging Category
    \li Description
    \row
    \li qt.opcua
    \li Plugin independent messages generated by \l QOpcUaProvider and \l QOpcUaClient
    \row
    \li qt.opcua.plugins.open62541
    \li Messages generated by the open62541 plugin
    \row
    \li qt.opcua.plugins.freeopcua
    \li Messages generated by the freeopcua plugin
    \endtable

    \section1 Related Information

    \list
    \li \l{Qt OPC UA C++ Classes}{C++ Classes}
    \li \l{Qt OPC UA Examples}{Examples}
    \li \l{https://opcfoundation.org/about/opc-technologies/opc-ua/}{OPC UA at the OPC foundation}
    \endlist
*/
