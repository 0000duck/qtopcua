/****************************************************************************
**
** Copyright (C) 2015 basysKom GmbH, info@basyskom.com
** Contact: http://www.qt.io/licensing/
**
** This file is part of the documentation of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example qml-browser
    \ingroup qtopcua-examples
    \title Using QOpcUaClient in a QML application

    \section1 Using the browsing capabilities of QOpcUaClient
    This example uses QOpcUaClient to build a QML based OPC UA browser.

    The structure of the OPC UA address space is shown as movable tables
    connected by lines corresponding to the references between the nodes.
    The table rows contain either attributes or child nodes.

    \image browser-screenshot.png

    \section1 Implementation

    The QML element OPCNode is used to represent an OPC UA node on the QML
    interface and gets its information from the corresponding QOpcUaNode
    object.

    QOpcUaClient, QOpcUaProvider and QOpcUaNode must be made available in QML via

    \code

    qmlRegisterType<QOpcUaProvider>("org.qtproject.opcua", 1, 0, "QOpcUaProvider");
    qmlRegisterUncreatableType<QOpcUaClient>("org.qtproject.opcua", 1, 0, "QOpcUaClient", "");
    qmlRegisterUncreatableType<QOpcUaNode>("org.qtproject.opcua", 1, 0, "QOpcUaNode","");

    \endcode

    in main.cpp

    To get a QOpcUaClient object from inside the QML application, a
    QOpcUaProvider is declared and the client from the best plugin is
    requested.

    \quotefromfile qml-browser/qml/main.qml
    \skipto QOpcUaProvider
    \printuntil }

    \quotefromfile qml-browser/qml/main.qml
    \skipto onCompleted
    \printuntil }
    Afterwards, the client is connected to the server.
    \printuntil }
    \printuntil }
    \printuntil }

    When the client is successfully connected to the server, the root node is
    requested from the server and an OPCNode object and a reference to the
    parent object are created via the createNode method.

    \skipto onConnectedChanged
    \printuntil }

    Whenever a child node is clicked on the QML interface, the corresponding
    node is requested from QOpcUaClient and a new OPCNode object is generated.

    \section1 Usage
    Child nodes can be expanded into own tables by clicking on them.
    Tables can be moved by holding and dragging.
    Clicking on the value field updates the value with the current value on the
    server.

*/
